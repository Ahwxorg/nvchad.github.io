"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var i=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=i.createContext({}),o=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=o(e.components);return i.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=o(n),d=l,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||r;return n?i.createElement(f,a(a({ref:t},c),{},{components:n})):i.createElement(f,a({ref:t},c))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,a=new Array(r);a[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:l,a[1]=s;for(var o=2;o<r;o++)a[o]=n[o];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3262:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return o},toc:function(){return c},default:function(){return m}});var i=n(7462),l=n(3366),r=(n(7294),n(3905)),a=["components"],s={},u=void 0,o={unversionedId:"Features",id:"Features",isDocsHomePage:!1,title:"Features",description:"`",source:"@site/docs/Features.md",sourceDirName:".",slug:"/Features",permalink:"/docs/Features",version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Config",permalink:"/docs/Config"},next:{title:"Support",permalink:"/docs/Support"}},c=[{value:"List of awesome plugins used in NvChad",id:"list-of-awesome-plugins-used-in-nvchad",children:[{value:"packer.nvim",id:"packernvim",children:[]},{value:"better-escape.vim",id:"better-escapevim",children:[]},{value:"Dashboard-nvim",id:"dashboard-nvim",children:[]},{value:"galaxyline.nvim",id:"galaxylinenvim",children:[]},{value:"nvim-bufferline.lua",id:"nvim-bufferlinelua",children:[]},{value:"nvim-base16.lua",id:"nvim-base16lua",children:[]},{value:"nvim-colorizer.lua",id:"nvim-colorizerlua",children:[]},{value:"nvim-treesitter",id:"nvim-treesitter",children:[]},{value:"LSP related plugins",id:"lsp-related-plugins",children:[]},{value:"nvim-lspinstall",id:"nvim-lspinstall",children:[]},{value:"neoformat",id:"neoformat",children:[]},{value:"nvim-tree.lua",id:"nvim-treelua",children:[]},{value:"nvim-web-devicons",id:"nvim-web-devicons",children:[]},{value:"Telescope",id:"telescope",children:[]},{value:"cheatsheet.nvim",id:"cheatsheetnvim",children:[]},{value:"blankline",id:"blankline",children:[]},{value:"Truezen.nvim",id:"truezennvim",children:[]},{value:"Misc plugins",id:"misc-plugins",children:[]}]}],p={toc:c};function m(e){var t=e.components,s=(0,l.Z)(e,a);return(0,r.kt)("wrapper",(0,i.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"WIP ( will be get done by today)\n")),(0,r.kt)("h2",{id:"list-of-awesome-plugins-used-in-nvchad"},"List of awesome plugins used in NvChad"),(0,r.kt)("h3",{id:"packernvim"},"packer.nvim"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A use-package inspired plugin manager for Neovim. Uses native packages, supports Luarocks dependencies, written in Lua, allows for expressive config , lazy loading etc.")),(0,r.kt)("h3",{id:"better-escapevim"},"better-escape.vim"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A plugin for escaping Vim insert mode without lagging.")),(0,r.kt)("h3",{id:"dashboard-nvim"},"Dashboard-nvim"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"dashboard plugin for nvim")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/siduck76/dotfiles/master/rice%20flex/dashboard-nvim.png",alt:"dashboard"})),(0,r.kt)("h3",{id:"galaxylinenvim"},"galaxyline.nvim"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"fast neovim statusline plugin written in lua")),(0,r.kt)("p",null,"(Separator styles : slant, round, default, block, arrow )\n",(0,r.kt)("img",{alt:"nn",src:n(4908).Z})," "),(0,r.kt)("h3",{id:"nvim-bufferlinelua"},"nvim-bufferline.lua"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Bufferline for neovim ( can be used for managing buffers , tabs and close them . create custom clickable buttons on the bufferline etc)\n",(0,r.kt)("img",{parentName:"li",src:"https://raw.githubusercontent.com/siduck76/dotfiles/master/rice%20flex/bufferline.png",alt:"bufferline"}))),(0,r.kt)("h3",{id:"nvim-base16lua"},"nvim-base16.lua"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Manages syntax colorscheme in NvChad")),(0,r.kt)("h3",{id:"nvim-colorizerlua"},"nvim-colorizer.lua"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"fastest Neovim colorizer , colors hex colors , hsl codes and much more!")),(0,r.kt)("h3",{id:"nvim-treesitter"},"nvim-treesitter"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Nvim Treesitter configurations and abstraction layer. We mostly use this for syntax highlighting. ")),(0,r.kt)("p",null,"(without / with treesitter)\n",(0,r.kt)("img",{alt:"treesitter",src:n(3655).Z})," "),(0,r.kt)("h3",{id:"lsp-related-plugins"},"LSP related plugins"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"nvim-lspconfig : Used for configuring lsp servers etc"),(0,r.kt)("li",{parentName:"ul"},"nvim-compe     : completion menu "),(0,r.kt)("li",{parentName:"ul"},"lsp-signature.nvim :  lsp signature hint when you type"),(0,r.kt)("li",{parentName:"ul"},"lspkind.nvim  : Adds pictograms to neovim built-in lsp completion items:")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/siduck76/dotfiles/master/rice%20flex/lspkind.png",alt:"lspkind"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"lsp",src:n(7948).Z})," "),(0,r.kt)("p",null,"( The video shows compe + lsp completions and lsp-signature while completion of functions and lsp diagnostics in the editor as well as on the statusline)"),(0,r.kt)("h3",{id:"nvim-lspinstall"},"nvim-lspinstall"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Installing lsp servers")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"}," :LspInstall css\n")),(0,r.kt)("h3",{id:"neoformat"},"neoformat"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Formatting plugin , just install a ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/sbdchd/neoformat#supported-filetypes"},"formatter")," for your language and  ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"(key for formatting)\n\n<leader> + fm  \n")),(0,r.kt)("h3",{id:"nvim-treelua"},"nvim-tree.lua"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A file explorer tree for neovim written in lua.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/siduck76/dotfiles/master/rice%20flex/nvimtree.png",alt:"chad"})),(0,r.kt)("h3",{id:"nvim-web-devicons"},"nvim-web-devicons"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Lua fork of vim devicons , lets you change colors and edit icons of filetypes")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"devi",src:n(3362).Z})," "),(0,r.kt)("h3",{id:"telescope"},"Telescope"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("img",{parentName:"li",src:"https://raw.githubusercontent.com/siduck76/dotfiles/master/rice%20flex/tel.png",alt:"Telescope"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("img",{parentName:"li",src:"https://raw.githubusercontent.com/siduck76/dotfiles/master/rice%20flex/telmedia.png",alt:"Telescope-media"}),"\n(telescope media works in linux only)")),(0,r.kt)("h3",{id:"cheatsheetnvim"},"cheatsheet.nvim"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Shows cheatsheet of all nvchad mappings + default vim mappings")),(0,r.kt)("h3",{id:"blankline"},"blankline"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Indentline plugin")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/siduck76/dotfiles/master/rice%20flex/blanklineNvim.png",alt:"devi"})," "),(0,r.kt)("h3",{id:"truezennvim"},"Truezen.nvim"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"add screnshots here")),(0,r.kt)("h3",{id:"misc-plugins"},"Misc plugins"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"gitsigns.nvim"),(0,r.kt)("li",{parentName:"ul"},"nvim-autopairs  "),(0,r.kt)("li",{parentName:"ul"},"vim-matchup"),(0,r.kt)("li",{parentName:"ul"},"nvim-comment"),(0,r.kt)("li",{parentName:"ul"},"autosave.nvim     "),(0,r.kt)("li",{parentName:"ul"},"neoscroll.nvim "),(0,r.kt)("li",{parentName:"ul"},"vim fugitive")))}m.isMDXComponent=!0},3362:function(e,t,n){t.Z=n.p+"assets/images/devi-bd6e4711f4dac4d21c2a6b0f925e1ebf.png"},4908:function(e,t,n){t.Z=n.p+"assets/images/galaxyline-0ffc99cd79c6d59d200559af792d6f3a.png"},7948:function(e,t,n){t.Z=n.p+"assets/images/lsp-7d4f0b258a8f7706dd04414c24693d1c.gif"},3655:function(e,t,n){t.Z=n.p+"assets/images/treesitter-b5e7bb72ca9aaae2c0c9c71c1f70de02.png"}}]);