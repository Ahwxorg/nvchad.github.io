"use strict";(self.webpackChunknvchad_site=self.webpackChunknvchad_site||[]).push([[446],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return s}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),p=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),s=r,g=m["".concat(u,".").concat(s)]||m[s]||c[s]||i;return n?a.createElement(g,l(l({ref:t},d),{},{components:n})):a.createElement(g,l({ref:t},d))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4197:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={id:"config",title:"Config"},u=void 0,p={unversionedId:"config",id:"config",isDocsHomePage:!1,title:"Config",description:"Structure",source:"@site/docs/config.md",sourceDirName:".",slug:"/config",permalink:"/config",version:"current",frontMatter:{id:"config",title:"Config"},sidebar:"docs",previous:{title:"Learning Lua",permalink:"/getting-started/learn-lua"},next:{title:"Features",permalink:"/features"}},d=[{value:"Structure",id:"structure",children:[]},{value:"Mappings",id:"mappings",children:[]},{value:"Configuration",id:"configuration",children:[{value:"Advanced Configuration",id:"advanced-configuration",children:[]}]}],c={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"structure"},"Structure"),(0,i.kt)("p",null,"NvChad comes with the following file / folder structure. ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/NvChad/NvChad/"},"An up-to-date & full tree can be viewed in the repo")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tree"},"\u251c\u2500\u2500 init.lua\n\u251c\u2500\u2500 lua\n\u2502   \u251c\u2500\u2500 chadrc.lua\n\u2502   \u251c\u2500\u2500 default_config.lua\n|   |\n\u2502   \u251c\u2500\u2500 core\n\u2502   \u2502   \u251c\u2500\u2500 init.lua\n\u2502   \u2502   \u251c\u2500\u2500 autocmds.lua\n\u2502   \u2502   \u251c\u2500\u2500 mappings.lua\n\u2502   \u2502   \u251c\u2500\u2500 options.lua\n\u2502   \u2502   \u2514\u2500\u2500 utils.lua\n|   |\n\u2502   \u251c\u2500\u2500 plugins\n\u2502   \u2502    \u251c\u2500\u2500 init.lua\n\u2502   \u2502    \u251c\u2500\u2500 packerInit.lua\n\u2502   \u2502    \u2514\u2500\u2500 configs\n\u2502   \u2502        \u251c\u2500\u2500 bufferline.lua\n\u2502   \u2502        \u251c\u2500\u2500 others.lua\n\u2502   \u2502        \u2514\u2500\u2500 <many more plugin configs>\n|   |\n\u2502   \u2514\u2500\u2500 colors\n\u2502       \u251c\u2500\u2500 init.lua\n\u2502       \u251c\u2500\u2500 highlights.lua\n\u2502       \u2514\u2500\u2500 themes\n\u2502           \u251c\u2500\u2500 onedark.lua\n\u2502           \u2514\u2500\u2500 <many more themes>\n")),(0,i.kt)("p",null,"Some important files that you may want to take a look at and/or adjust to your liking include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/lua/chadrc.lua")," - Main config file for users options, themes, disabling plugins etc."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/lua/colors/init.lua")," - Loads syntax theme (base16 plugin) and highlights."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/lua/colors/highlights.lua")," - All the highlights are defined here."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/lua/core/mappings.lua")," - All mappings are defined here. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/lua/core/options.lua")," - All options are defined here."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/lua/plugins/packerInit.lua")," - Packer's config."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/lua/plugins/config/*.lua")," - Configs of various plugins."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/lua/plugins/config/others.lua")," - Configs of various plugins which have small configs (less than 20 lines)")),(0,i.kt)("p",null,"(whenever you run :PackerSync or :PackerCompile , packer will automatically create a plugin folder in ~/.config/nvim , just ignore that and dont touch it)"),(0,i.kt)("p",null,"Please do not modify the following files!"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/lua/core/utils.lua")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/lua/default_config.lua"))),(0,i.kt)("h2",{id:"mappings"},"Mappings"),(0,i.kt)("p",null,"To see some of the common mappings, check out the ",(0,i.kt)("inlineCode",{parentName:"p"},"/lua/chadrc.lua")," file. "),(0,i.kt)("p",null,"You can view and search through all of the mappings and shortcuts via the ",(0,i.kt)("inlineCode",{parentName:"p"},"cheatsheet")," plugin while inside NeoVim with ",(0,i.kt)("inlineCode",{parentName:"p"},"<leader> + dk")," to bring up the default mappings and ",(0,i.kt)("inlineCode",{parentName:"p"},"<leader> + uk")," for the user mappings."),(0,i.kt)("p",null,"Some notable default mappings include:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Key mapping"),(0,i.kt)("th",{parentName:"tr",align:null},"Action"),(0,i.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"jk")),(0,i.kt)("td",{parentName:"tr",align:null},"ESC to normal mode"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<SHIFT> + t")),(0,i.kt)("td",{parentName:"tr",align:null},"open a new buffer"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<SPACE> + x")),(0,i.kt)("td",{parentName:"tr",align:null},"close current buffer"),(0,i.kt)("td",{parentName:"tr",align:null},"(hides a terminal)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<TAB>")),(0,i.kt)("td",{parentName:"tr",align:null},"cycle active buffer in bufferline"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<SHIFT> + <TAB>")," for previous")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<CTRL> + n")),(0,i.kt)("td",{parentName:"tr",align:null},"open NvimTree explorer"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<ENTER>")," to select")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<SPACE> + u + k")),(0,i.kt)("td",{parentName:"tr",align:null},"view key mappings"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<SPACE> + /")),(0,i.kt)("td",{parentName:"tr",align:null},"toggle commenting a line"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<SPACE> + f + f")),(0,i.kt)("td",{parentName:"tr",align:null},"find a file"),(0,i.kt)("td",{parentName:"tr",align:null},"Telescope picker")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<SPACE> + g + s")),(0,i.kt)("td",{parentName:"tr",align:null},"git status"),(0,i.kt)("td",{parentName:"tr",align:null},"Telescope picker")))),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"The primary user adjustable configuration lives in the ",(0,i.kt)("inlineCode",{parentName:"p"},"/lua/chadrc.lua")," file. There we adjust some common settings you may want to change depending on your preferences."),(0,i.kt)("p",null,"There is an ",(0,i.kt)("inlineCode",{parentName:"p"},"M.options")," object which contains options you can toggle on/off or adjust the values of yourself."),(0,i.kt)("p",null,"For example, to change the autosave feature, change the variable ",(0,i.kt)("inlineCode",{parentName:"p"},"autosave"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"M.options = {\n   ...\n   autosave = true,\n   ...\n}\n")),(0,i.kt)("p",null,"There is also an ",(0,i.kt)("inlineCode",{parentName:"p"},"M.plugin_status")," object which contains a map of plugin names and booleans. Here you can toggle individual plugins on/off if you do not need them."),(0,i.kt)("p",null,"In addition, theres an object of common shortcuts you can adjust found in ",(0,i.kt)("inlineCode",{parentName:"p"},"M.mappings")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"M.mappings.plugins")," for plugin shortcuts."),(0,i.kt)("h3",{id:"advanced-configuration"},"Advanced Configuration"),(0,i.kt)("p",null,"More advanced configuration options can be found in the ",(0,i.kt)("inlineCode",{parentName:"p"},"/lua/core/")," directory. There you will find a file called ",(0,i.kt)("inlineCode",{parentName:"p"},"options.lua"),", for example."),(0,i.kt)("p",null,"If you take a look in there, you will see the basic NeoVim options we defined in the ",(0,i.kt)("inlineCode",{parentName:"p"},"chadrc.lua")," file imported and mapped to their real ",(0,i.kt)("inlineCode",{parentName:"p"},"vim.opt")," options. Therefore, if you want to add a custom setting to your ",(0,i.kt)("inlineCode",{parentName:"p"},"chadrc.lua"),", you'll need to add the mapping from the chadrc value to the vim ",(0,i.kt)("inlineCode",{parentName:"p"},"set")," value here. Then you can stay organised and manage the setting in your ",(0,i.kt)("inlineCode",{parentName:"p"},"chadrc.lua"),"."),(0,i.kt)("p",null,"If you take a look through the rest of the ",(0,i.kt)("inlineCode",{parentName:"p"},"/lua/core/*.lua")," files, you'll find that most configuration in NvChad works like this. There are most basic settings exposed to the user the ",(0,i.kt)("inlineCode",{parentName:"p"},"chadrc.lua")," file, and then they are imported and mapped to real settings, or remaps, autocmds, etc. in these advanced configuration files."))}m.isMDXComponent=!0}}]);